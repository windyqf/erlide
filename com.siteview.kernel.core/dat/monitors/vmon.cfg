[V$ Monitor]
Counters=150
;CustomCounters=2
;How many seconds for each data sample?
SamplingRate=300

;[Custom0]
;Name must be unique
;Name=Five Hundred
;Description=This counter always returns 500.
;Query=SELECT 500 FROM DUAL
;IsRate=0

;[Custom1]
;Name=Thirty Five
;Description=This counter always returns 35.
;Query=SELECT 35 FROM DUAL
;IsRate=1

[0]
Name=CPU used by this session
Description=This is the amount of CPU time (in 10s of milliseconds) used by a session between when a user call started and ended. Some user calls can complete within 10 milliseconds and as a result, the start and end user-call time can be the same. In this case, 0 milliseconds are added to the statistic. A similar problem can exist in the reporting by the operating system, especially on systems that suffer from many context switches.
IsRate=0

[1]
Name=CPU used when call started
Description=The CPU time used when the call is started.
IsRate=0

[2]
Name=CR blocks created
Description=A buffer in the buffer cache was cloned. The most common reason for cloning is that the buffer is held in a incompatible mode.
IsRate=0

[3]
Name=Cached Commit SCN referenced
Description=The number of times cached Commit SCN is referenced.
IsRate=0

[4]
Name=Commit SCN cached
Description=The number of times Commit SCN is cached.
IsRate=0

[5]
Name=Current blocks converted for CR
Description=A CURRENT buffer (shared or exclusive) is made CR before it can be used.
IsRate=0

[6]
Name=DBWR Flush object call found no dirty buffers
Description=The DBWR didn't find any dirty buffers for an object that was flushed from the cache.
IsRate=0

[7]
Name=DBWR Flush object cross instance calls
Description=The number of times DBWR received a flush by object number cross instance call (from a remote instance). This includes both checkpoint and invalidate object.
IsRate=0

[8]
Name=DBWR buffers scanned
Description=The total number of buffers looked at when scanning each LRU set for dirty buffers to clean. This count includes both dirty and clean buffers. Divide by DBWR lru scans to find the average number of buffers scanned.
IsRate=0

[9]
Name=DBWR checkpoint buffers written
Description=The number of buffers that were written for checkpoints.
IsRate=0

[10]
Name=DBWR checkpoints
Description=Number of times the DBWR was asked to scan the cache and write all blocks marked for a checkpoint.
IsRate=0

[11]
Name=DBWR cross instance writes
Description=The total number of blocks written for other instances so that they can access the buffers.
IsRate=0

[12]
Name=DBWR free buffers found
Description=The number of buffers that DBWR found to be clean when it was requested to make free buffers. Divide by DBWR make free requests to find the average number of reusable buffers at the end of each LRU.
IsRate=0

[13]
Name=DBWR lru scans
Description=The number of times that DBWR does a scan of the LRU queue looking for buffers to write. This includes times when the scan is to fill a batch being written for another purpose such as a checkpoint. This statistic is always greater than or equal to DBWR make free requests.
IsRate=0

[14]
Name=DBWR make free requests
Description=Number of messages received requesting DBWR to make some more free buffers for the LRU.
IsRate=0

[15]
Name=DBWR revisited being-written buffer
Description=The number of times that dbwr tried to save a buffer for writing and found that it was already in the write batch. This statistic is a measure of the amount of "useless" work that DBWR had to do in trying to fill the batch. This can occur because many sources contribute to a write batch. If the same buffer from different sources is considered for adding to the write batch, then all but the first attempt will be "useless" since the buffer is already marked as being written.
IsRate=0

[16]
Name=DBWR skip hot writes
Description=The number of times DBWR skipped writing "hot" buffers.
IsRate=0

[17]
Name=DBWR summed scan depth
Description=The current scan depth (number of buffers examined by DBWR) is added to this statistic every time DBWR scans the LRU for dirty buffers. Divide by DBWR lru scans to find the average scan depth.
IsRate=0

[18]
Name=DBWR timeouts
Description=The number of times that the DBWR has been idle since the last timeout. These are the times that the DBWR looked for buffers to idle write.
IsRate=0

[19]
Name=DBWR undo block writes
Description=The number of transaction table blocks written by DBWR. It is an indication of how many "hot" buffers were written, leading to write complete waits.
IsRate=0

[20]
Name=DDL statements parallelized
Description=The number of DDL statements that were parallelized.
IsRate=0

[21]
Name=DML statements parallelized
Description=The number of DML statements that were parallelized.
IsRate=0

[22]
Name=PX local messages recv'd
Description=The number of local messages received for Parallel Executions.
IsRate=0

[23]
Name=PX local messages sent
Description=The number of local messages send for Parallel Executions.
IsRate=0

[24]
Name=PX remote messages recv'd
Description=The number of remote messages received for Parallel Executions.
IsRate=0

[25]
Name=PX remote messages sent
Description=The number of remote messages sent for Parallel Executions.
IsRate=0

[26]
Name=SQL*Net roundtrips to/from client
Description=Total number of Net8 messages sent to and received from the client.
IsRate=0

[27]
Name=SQL*Net roundtrips to/from dblink
Description=Total number of Net8 messages sent over and received from a database link.
IsRate=0

[28]
Name=Unnecesary process cleanup for SCN batching
Description=The total number of times that the process cleanup was performed unnecessarily because the session/process did not get the next batched SCN. The next batched SCN went to another session instead.
IsRate=0

[29]
Name=background checkpoints completed
Description=The number of checkpoints completed by the background. This statistic is incremented when the background successfully advances the thread checkpoint.
IsRate=0

[30]
Name=background checkpoints started
Description=The number of checkpoints started by the background. It can be larger than the number completed if a new checkpoint overrides an incomplete checkpoint. This only includes checkpoints of the thread, not individual file checkpoints for operations such as offline or begin backup. This statistic does not include the checkpoints performed in the foreground, such as ALTER SYSTEM CHECKPOINT LOCAL.
IsRate=0

[31]
Name=bytes received via SQL*Net from client
Description=The total number of bytes received from the client over Net8.
IsRate=0

[32]
Name=bytes received via SQL*Net from dblink
Description=The total number of bytes received from a database link over Net8.
IsRate=0

[33]
Name=bytes sent via SQL*Net to client
Description=The total number of bytes sent to the client from the foreground process(es).
IsRate=0

[34]
Name=bytes sent via SQL*Net to dblink
Description=The total number of bytes sent over a database link.
IsRate=0

[35]
Name=calls to get snapshot scn: kcmgss
Description=The number of times a snap System Change Number (SCN) was allocated. The SCN is allocated at the start of a transaction.
IsRate=0

[36]
Name=change write time
Description=The elapsed time for redo write for changes made to CURRENT blocks in 10s of milliseconds.
IsRate=0

[37]
Name=cleanouts and rollbacks - consistent read gets
Description=The number of times CR gets require both block rollbacks, and block cleanouts.
IsRate=0

[38]
Name=cleanouts only - consistent read gets
Description=The number of times CR gets require only block cleanouts, no rollbacks.
IsRate=0

[39]
Name=cluster key scan block gets
Description=The number of blocks obtained in a cluster scan.
IsRate=0

[40]
Name=cluster key scans
Description=The number of cluster scans that were started.
IsRate=0

[41]
Name=commit cleanout failures: block lost
Description=The number of times a cleanout at commit was attempted and could not find the correct block due to forced write, replacement, or switch CURRENT.
IsRate=0

[42]
Name=commit cleanout failures: buffer being written
Description=The number of times a cleanout at commit was attempted but the buffer was currently being written.
IsRate=0

[43]
Name=commit cleanout failures: callback failure
Description=The number of times the cleanout callback function returns FALSE.
IsRate=0

[44]
Name=commit cleanout failures: cannot pin
Description=The total number of times a commit cleanout was performed but failed because the block could not be pinned.
IsRate=0

[45]
Name=commit cleanout failures: hot backup in progress
Description=The number of times cleanout at commit was attempted during hot backup. The image of the block needs to be logged before the buffer can be made dirty.
IsRate=0

[46]
Name=commit cleanout failures: write disabled
Description=The number of times that a cleanout at commit time was performed but the writes to the database had been temporarily disabled.
IsRate=0

[47]
Name=commit cleanouts
Description=The total number of times the cleanout block at commit time function was performed.
IsRate=0

[48]
Name=commit cleanouts successfully completed
Description=The number of times the cleanout block at commit time function successfully completed.
IsRate=0

[49]
Name=consistent changes
Description=The number of times a database block has applied rollback entries to perform a consistent read on the block. Work loads that produce a great deal of consistent changes can consume a great deal of resources.
IsRate=0

[50]
Name=consistent gets
Description=The number of times a consistent read was requested for a block. See also consistent changes above.
IsRate=0

[51]
Name=cross instance CR read
Description=The number of times this instance made a cross instance call to write a particular block due to timeout on an instance lock get. The call allowed the block to be read CR rather than CURRENT.
IsRate=0

[52]
Name=data blocks consistent reads - undo records applied
Description=The number of undo records applied to CR rollback data blocks.
IsRate=0

[53]
Name=db block changes
Description=Closely related to consistent changes, this statistics counts the total number of changes that were made to all blocks in the SGA that were part of an update or delete operation. These are changes that are generating redo log entries and hence will be permanent changes to the database if the transaction is committed. This statistic is a rough indication of total database work. This statistic indicates (possibly on a per-transaction level) the rate at which buffers are being dirtied.
IsRate=0

[54]
Name=db block gets
Description=This statistic tracks the number of blocks obtained in CURRENT mode.
IsRate=0

[55]
Name=deferred (CURRENT) block cleanout applications
Description=The number of times cleanout records are deferred, piggyback with changes, always current get.
IsRate=0

[56]
Name=dirty buffers inspected
Description=The number of dirty buffers found by the foreground while the foreground is looking for a buffer to reuse.
IsRate=0

[57]
Name=enqueue conversions
Description=The total number of enqueue converts.
IsRate=0

[58]
Name=enqueue deadlocks
Description=The total number of enqueue deadlocks between different sessions.
IsRate=0

[59]
Name=enqueue releases
Description=The total number of enqueue releases.
IsRate=0

[60]
Name=enqueue requests
Description=The total number of enqueue gets.
IsRate=0

[61]
Name=enqueue timeouts
Description=The total number of enqueue operations (get and convert) that timed out before they could complete.
IsRate=0

[62]
Name=enqueue waits
Description=The total number of waits that happened during an enqueue convert or get because the enqueue could not be granted right away.
IsRate=0

[63]
Name=exchange deadlocks
Description=The number of times that a process detected a potential deadlock when exchanging two buffers and raised an internal, restartable error. Index scans are currently the only operations which perform exchanges.
IsRate=0

[64]
Name=execute count
Description=The total number of calls (user and recursive) that execute SQL statements.
IsRate=0

[65]
Name=free buffer inspected
Description=The number of buffers skipped over from the end of an LRU queue in order to find a reusable buffer. The difference between this statistic and dirty buffers inspected is the number of buffers that could not be used because they were busy, needed to be written after rapid aging out, or they have a user, a waiter, or are being read/written. For more information, see "dirty buffers inspected".
IsRate=0

[66]
Name=free buffer requested
Description=The count of the number of times a reusable buffer or a free buffer was requested to create or load a block.
IsRate=0

[67]
Name=global cache defers
Description=The number of times a ping request was deferred until later.
IsRate=0

[68]
Name=global cache freelist waits
Description=The number of pings for free lock elements (when all releasable locks are in use)
IsRate=0

[69]
Name=global lock async converts
Description=The total number of asynchronous global lock converts.
IsRate=0

[70]
Name=global lock async gets
Description=The total number of asynchronous global lock gets.
IsRate=0

[71]
Name=global lock convert time
Description=The total elapsed time of all synchronous (non-asynchronous) global lock converts in 10s of milliseconds.
IsRate=0

[72]
Name=global lock get time
Description=The total elapsed time of all synchronous (non-asynchronous) global lock gets in 10s of milliseconds.
IsRate=0

[73]
Name=global lock releases
Description=The total number of synchronous global lock releases.
IsRate=0

[74]
Name=global lock sync converts
Description=The total number of synchronous global lock converts.
IsRate=0

[75]
Name=global lock sync gets
Description=The total number of synchronous global lock gets.
IsRate=0

[76]
Name=immediate (CR) block cleanout applications
Description=The number of times cleanout records are applied immediately during CR gets.
IsRate=0

[77]
Name=immediate (CURRENT) block cleanout applications
Description=The number of times cleanout records are applied immediately during current gets.
IsRate=0

[78]
Name=kcmccs called get current scn
Description=The number of times the kernel got the CURRENT SCN when there was a need to casually confirm the SCN.
IsRate=0

[79]
Name=kcmgss read scn without going to DLM
Description=The number of times the kernel casually confirmed the SCN without going to the LM.
IsRate=0

[80]
Name=kcmgss waited for batching
Description=The number of times the kernel waited on a snapshot SCN.
IsRate=0

[81]
Name=logons cumulative
Description=The total number of logons since the instance started. This statistic is useful only in V$SYSSTAT. It gives an instance overview of all processes that logged on.
IsRate=0

[82]
Name=logons current
Description=The total number of current logons. This statistic is useful only in V$SYSSTAT.
IsRate=0

[83]
Name=next scns gotten without going to DLM
Description=The number of SCNs (System Change Numbers) obtained without going to the DLM.
IsRate=0

[84]
Name=no work - consistent read gets
Description=The number of times CR gets require no block cleanouts nor rollbacks.
IsRate=0

[85]
Name=opened cursors cumulative
Description=The total number of opened cursors since the instance has started (in V$SYSSTAT). In V$SESSTAT, this statistic shows the total number of cursors opened since the start of the session.
IsRate=0

[86]
Name=opened cursors current
Description=The total number of current open cursors.
IsRate=0

[87]
Name=opens of replaced files
Description=The total number of files that needed to be reopened because they were no longer in the process file cache.
IsRate=0

[88]
Name=opens requiring cache replacement
Description=The total number of file opens that caused a current file to be closed in the process file cache.
IsRate=0

[89]
Name=parse count (hard)
Description=The total number of parse calls (real parses). A hard parse means allocating a workheap and other memory structures, and then building a parse tree. A hard parse is a very expensive operation in terms of memory use.
IsRate=0

[90]
Name=parse count (total)
Description=Total number of parse calls (hard and soft). A soft parse is a check to make sure that the permissions on the underlying object have not changed.
IsRate=0

[91]
Name=parse time cpu
Description=The total CPU time used for parsing (hard and soft) in 10s of milliseconds.
IsRate=0

[92]
Name=parse time elapsed
Description=The total elapsed time for parsing in 10s of milliseconds. By subtracting parse time cpu from the this statistic, the total waiting time for parse resources is determined. For more information see parse time cpu above.
IsRate=0

[93]
Name=physical reads
Description=The total number of data blocks read from disk. This equals the number of "physical reads direct" plus all reads into buffer cache.
IsRate=0

[94]
Name=physical writes
Description=The total number of data blocks written to disk. This equals the number of "physical writes direct" plus all writes from buffer cache.
IsRate=0

[95]
Name=queries parallelized
Description=The number of SELECT statements that got parallelized.
IsRate=0

[96]
Name=recovery array read time
Description=The elapsed time of I/O while doing recovery.
IsRate=0

[97]
Name=recovery array reads
Description=The number of reads performed during recovery.
IsRate=0

[98]
Name=recovery blocks read
Description=The number of blocks read during recovery.
IsRate=0

[99]
Name=recursive calls
Description=Oracle maintains tables used for internal processing. When Oracle needs to make a change to these tables, it internally generates a SQL statement. These internal SQL statements generate recursive calls.
IsRate=0

[100]
Name=recursive cpu usage
Description=The total CPU time used by non-user calls (recursive calls). Subtract this value from CPU used by this session to determine how much CPU time was used by the user calls.
IsRate=0

[101]
Name=redo entries
Description=This statistic increments each time redo entries are copied into the redo log buffer.
IsRate=0

[102]
Name=redo entries linearized
Description=The total number of entries of size <= REDO_ENTRY_PREBUILD_THRESHOLD. Building these entries increase CPU time, but may increase concurrency on a multi-processor system.
IsRate=0

[103]
Name=redo log space requests
Description=The active log file is full and Oracle is waiting for disk space to be allocated for the redo log entries. Space is created by performing a log switch. Small Log files in relation to the size of the SGA or the commit rate of the work load can cause problems. When the log switch occurs, Oracle must ensure that all committed dirty buffers are written to disk before switching to a new log file. If you have a large SGA full of dirty buffers and small redo log files, a log switch must wait for DBWR to write dirty buffers to disk before continuing. Also examine the log file space and log file space switch wait events in V$SESSION_WAIT.
IsRate=0

[104]
Name=redo log space wait time
Description=The total elapsed time of waiting for redo log space request in 10s of milliseconds.
IsRate=0

[105]
Name=redo log switch interrupts
Description=The number of times that another instance asked this instance to advance to the next log file.
IsRate=0

[106]
Name=redo ordering marks
Description=The number of times that an SCN had to be allocated to force a redo record to have an higher SCN than a record generated in another thread using the same block.
IsRate=0

[107]
Name=redo size
Description=The total amount of redo generated in bytes.
IsRate=0

[108]
Name=redo synch time
Description=The elapsed time of all redo sync writes calls in 10s of milliseconds.
IsRate=0

[109]
Name=redo synch writes
Description=Usually, redo that is generated and copied into the log buffer need not be flushed out to disk immediately. The log buffer is a circular buffer that LGWR periodically flushes. Redo sync writes increments when changes being applied must be written out to disk due to a commit.
IsRate=0

[110]
Name=redo wastage
Description=Number of bytes wasted because redo blocks needed to be written before they are completely full. Early writing may be needed to commit transactions, to be able to write a database buffer or to switch logs.
IsRate=0

[111]
Name=redo write time
Description=The total elapsed time of the write from the redo log buffer to the current redo log file in 10s of milliseconds.
IsRate=0

[112]
Name=redo writer latching time
Description=The elapsed time need by LWGR to obtain and release each copy latch in 10s of milliseconds. This is only used if the initialization parameter LOG_SIMULTANEOUS_COPIES > 0. For more information, see "LOG_SIMULTANEOUS_COPIES".
IsRate=0

[113]
Name=redo writes
Description=Count of the total number of writes by LGWR to the redo log files.
IsRate=0

[114]
Name=remote instance undo block writes
Description=The number of times this instance wrote a dirty undo block so that another instance could read it.
IsRate=0

[115]
Name=remote instance undo header writes
Description=The number of times this instance wrote a dirty undo header block so that another instance could read it.
IsRate=0

[116]
Name=remote instance undo requests
Description=The number of times this instance requested undo from another instance so it could be read CR.
IsRate=0

[117]
Name=rollback changes - undo records applied
Description=The number of undo records applied to rollback (real) changes.
IsRate=0

[118]
Name=rollbacks only - consistent read gets
Description=The number of times CR gets require only block rollbacks, no block cleanouts.
IsRate=0

[119]
Name=serializable aborts
Description=The number of times a SQL statement in serializable isolation level had to abort.
IsRate=0

[120]
Name=session connect time
Description=The connect time for the session in 1/100 seconds. This value is useful only in V$SESSTAT. It is the wall clock time of when the logon to this session occurred.
IsRate=0

[121]
Name=session cursor cache count
Description=The total number of cursor cached. This is only incremented if SESSION_CACHED_CURSORS > 0. This statistic is the most useful in V$SESSTAT. If the value for this statistic in V$SESSTAT is close to the setting of the initialization parameter SESSION_CACHED_CURSORS, the value of the initialization parameter should be increased.
IsRate=0

[122]
Name=session cursor cache hits
Description=The count of the number of hits in the session cursor cache. A hit means that the SQL statement did not have to be reparsed. By subtracting this statistic from parse count (total) one can determine the real number of parses that happened.
IsRate=0

[123]
Name=session logical reads
Description=This statistic is basically db block gets + consistent gets. For more information, see "db block gets" and "consistent gets".
IsRate=0

[124]
Name=session pga memory
Description=This statistic shows the current PGA size for a session. This statistic is useful only in V$SESSTAT; it has no meaning in V$SYSSTAT.
IsRate=0

[125]
Name=session pga memory max
Description=This statistic shows the peak PGA size for a session. This statistic is useful only in V$SESSTAT; it has no meaning in V$SYSSTAT.
IsRate=0

[126]
Name=session stored procedure space
Description=This statistic shows the amount of memory that this session is using for stored procedures.
IsRate=0

[127]
Name=session uga memory
Description=This statistic shows the current UGA size for a session. This statistic is useful only in V$SESSTAT; it has no meaning in V$SYSSTAT.
IsRate=0

[128]
Name=session uga memory max
Description=This statistic shows the peak UGA size for a session. This statistic is useful only in V$SESSTAT; it has no meaning in V$SYSSTAT.
IsRate=0

[129]
Name=sorts (disk)
Description=If the number of disk writes is non-zero for a given sort operation, then this statistic is incremented. Sorts that require I/O to disk are quite resource intensive. Try increasing the size of the initialization parameter SORT_AREA_SIZE. For more information, see "SORT_AREA_SIZE".
IsRate=0

[130]
Name=sorts (memory)
Description=If the number of disk writes is zero, then the sort was performed completely in memory and this statistic is incremented. This is more an indication of sorting activity in the application work load. You cannot do much better than memory sorts, except maybe no sorts at all. Sorting is usually caused by selection criteria specifications within table join SQL operations.
IsRate=0

[131]
Name=sorts (rows)
Description=The total number of rows sorted.
IsRate=0

[132]
Name=summed dirty queue length
Description=The sum of the dirty LRU queue length after every write request. Divide by write requests to get the average queue length after write completion.
IsRate=0

[133]
Name=table fetch by rowid
Description=When rows are fetched using a ROWID (usually recovered from an index), each row returned increments this counter. This statistic is an indication of row fetch operations being performed with the aid of an index. Because doing table scans usually indicates either non-optimal queries or tables without indexes, this statistic should increase as the above issues have been addressed in the application.
IsRate=0

[134]
Name=table fetch continued row
Description=When a row that spans more than one block is encountered during a fetch, this statistic is incremented. Retrieving rows that span more than one block increases the logical I/O by a factor that corresponds to the number of blocks than need to be accessed. Exporting and re-importing may eliminate this problem. Taking a closer look at the STORAGE parameters PCT_FREE and PCT_USED. This problem cannot be fixed if rows are larger than database blocks (for example, if the LONG datatype is used and the rows are extremely large).
IsRate=0

[135]
Name=table scan blocks gotten
Description=During scanning operations, each row is retrieved sequentially by Oracle. Each block encountered during the scan increments this statistic. This statistic informs you of the number of database blocks that you had to get from the buffer cache for the purpose of scanning. Compare the value of this parameter to the value of consistent gets to get a feeling for how much of the consistent read activity can be attributed to scanning. For more information, see "consistent gets".
IsRate=0

[136]
Name=table scan rows gotten
Description=This statistic is collected during a scan operation, but instead of counting the number of database blocks, it counts the rows being processed.
IsRate=0

[137]
Name=table scans (cache partitions)
Description=Count of range scans on tables that have the CACHE option enabled.
IsRate=0

[138]
Name=table scans (direct read)
Description=Count of table scans performed with direct read (bypassing the buffer cache).
IsRate=0

[139]
Name=table scans (long tables)
Description=Long (or conversely short) tables can be defined as tables that do not meet the short table criteria as described in table scans (short tables) below.
IsRate=0

[140]
Name=table scans (rowid ranges)
Description=Count of table scans with specified ROWID endpoints. This is performed for Parallel Query.
IsRate=0

[141]
Name=table scans (short tables)
Description=Long (or conversely short) tables can be defined by optimizer hints coming down into the row source access layer of Oracle. The table must have the CACHE option set.
IsRate=0

[142]
Name=total file opens
Description=The total number of file opens being performed by the instance. Each process needs a number of files (control file, log file, database file) in order to work against the database.
IsRate=0

[143]
Name=transaction rollbacks
Description=The number of transactions being successfully rolled back.
IsRate=0

[144]
Name=transaction tables consistent read rollbacks
Description=The number of times transaction tables are CR rolled back.
IsRate=0

[145]
Name=transaction tables consistent reads - undo records applied
Description=The number of undo records applied to CR rollback transaction tables.
IsRate=0

[146]
Name=user calls
Description=Oracle allocates resources (Call State Objects) to keep track of relevant user call data structures every time you log in, parse, or execute. When determining activity, the ratio of user calls to RPI calls, give you an indication of how much internal work gets generated as a result of the type of requests the user is sending to Oracle.
IsRate=0

[147]
Name=user commits
Description=When a user commits a transaction, the redo generated that reflects the changes made to database blocks must be written to disk. Commits often represent the closest thing to a user transaction rate.
IsRate=0

[148]
Name=user rollbacks
Description=This statistic stores the number of times users manually issue the ROLLBACK statement or an error occurs during users' transactions.
IsRate=0

[149]
Name=write requests
Description=This statistic stores the number of times DBWR takes a batch of dirty buffers and writes them to disk.
IsRate=0

